{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\donne\\\\Desktop\\\\Next\\\\first-next\\\\pages\\\\post.js\";\nimport React from \"react\";\n// import { withRouter } from 'next/router'\nimport axios from 'axios';\n\nvar Post = function Post(_ref) {\n  var id = _ref.id,\n      comments = _ref.comments;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, \"Comments for Post #\", id), comments.map(function (comment) {\n    return React.createElement(\"p\", {\n      key: comment.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, comment.email);\n  }));\n};\n\nPost.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref2) {\n    var query, res, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            query = _ref2.query;\n            _context.next = 3;\n            return axios.get(\"https://jsonplaceholder.typicode.com/comments?postId=\".concat(query.id));\n\n          case 3:\n            res = _context.sent;\n            data = res.data;\n            return _context.abrupt(\"return\", _objectSpread({}, query, {\n              comments: data\n            }));\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default Post; // https://jsonplaceholder.typicode.com/comments?postId=1\n// const Post = (props) => <h1>YOU ARE LOOKING AT POST #{props.router.query.id}</h1>;\n// export default withRouter(Post);","map":{"version":3,"sources":["C:\\Users\\donne\\Desktop\\Next\\first-next\\pages\\post.js"],"names":["axios","Post","id","comments","map","comment","email","getInitialProps","query","get","res","data"],"mappings":";;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,MAAGC,EAAH,QAAGA,EAAH;AAAA,MAAOC,QAAP,QAAOA,QAAP;AAAA,SACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAwBD,EAAxB,CADJ,EAEKC,QAAQ,CAACC,GAAT,CAAa,UAAAC,OAAO;AAAA,WACjB;AAAG,MAAA,GAAG,EAAEA,OAAO,CAACH,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqBG,OAAO,CAACC,KAA7B,CADiB;AAAA,GAApB,CAFL,CADS;AAAA,CAAb;;AAQAL,IAAI,CAACM,eAAL;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,KAAT,SAASA,KAAT;AAAA;AAAA,mBACDR,KAAK,CAACS,GAAN,gEAAkED,KAAK,CAACN,EAAxE,EADC;;AAAA;AACbQ,YAAAA,GADa;AAEXC,YAAAA,IAFW,GAEFD,GAFE,CAEXC,IAFW;AAAA,+DAGPH,KAHO;AAGAL,cAAAA,QAAQ,EAAEQ;AAHV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAKA,eAAeV,IAAf,C,CAEA;AACA;AACA","sourcesContent":["// import { withRouter } from 'next/router'\r\nimport axios from 'axios'\r\nconst Post = ({ id, comments }) => (\r\n    <div>\r\n        <h1>Comments for Post #{id}</h1>\r\n        {comments.map(comment => (\r\n            <p key={comment.id}>{comment.email}</p>\r\n        ))}\r\n    </div>\r\n);\r\nPost.getInitialProps = async ({ query }) => {\r\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/comments?postId=${query.id}`);\r\n    const { data } = res;\r\n    return { ...query, comments: data }\r\n}\r\nexport default Post;\r\n\r\n// https://jsonplaceholder.typicode.com/comments?postId=1\r\n// const Post = (props) => <h1>YOU ARE LOOKING AT POST #{props.router.query.id}</h1>;\r\n// export default withRouter(Post);\r\n"]},"metadata":{},"sourceType":"module"}